openapi: 3.0.3
tags:
  - name: userProfile
    description: "/user/profile"
  - name: apiToken
    description: /user/profile/tokens
  - name: event
    description: "/events"
  - name: scripting
    description: "/script/execute"
info:
  description: StackState's API specification
  version: 0.0.1
  title: StackState API
  license:
    name: Proprietary
    url: "https://stackstate.com"
  contact:
    name: StackState
    email: info@stackstate.com
    url: "https://stackstate.com"
externalDocs:
  description: Documentation
  url: "https://docs.stackstate.com/"
paths:
  /user/profile:
  /user/profile:
    get:
      tags:
        - userProfile
      summary: "Get current user profile"
      description: "Get current user profile."
      operationId: getCurrentUserProfile
      responses:
        "200":
          $ref: "#/components/responses/userProfile"
        "400":
          description: Get User Profile Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserNotFoundError"
        "500":
          $ref: "common.api.yaml#/components/responses/genericServerError"
    put:
      tags:
        - userProfile
      summary: "Save current user profile"
      description: "Save current user profile."
      operationId: saveCurrentUserProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          $ref: "#/components/responses/userProfile"
        "400":
          description: Save User Profile Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileSaveError"
        "500":
          $ref: "common.api.yaml#/components/responses/genericServerError"
  /user/profile/tokens:
    get:
      tags:
        - apiToken
      summary: "Get current user's API tokens"
      description: "Get all API token of the logged-in user."
      operationId: getCurrentUserApiTokens
      responses:
        "200":
          $ref: "#/components/responses/apiTokens"
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserNotFoundError"
        "500":
          $ref: "common.api.yaml#/components/responses/genericServerError"
  /user/profile/tokens:
    $ref: "user_profile.api.yaml#/paths/%2Fuser%2Fprofile%2Ftokens"
  /events:
    $ref: "events.api.yaml#/paths/%2Fevents"
  /events/{eventId}:
    $ref: "events.api.yaml#/paths/%2Fevents%2F%7BeventId%7D"
  /eventTypes:
    $ref: "events.api.yaml#/paths/%2FeventTypes"
  /eventSources:
    $ref: "events.api.yaml#/paths/%2FeventSources"
  /eventTags:
    $ref: "events.api.yaml#/paths/%2FeventTags"
  /script/execute:
    $ref: "script.api.yaml#/paths/%2Fscript%2Fexecute"
security:
  - ApiToken: []
components:
  responses:
    userProfile:
      description: User Profile
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserProfile"
    apiTokens:
      description: Api Token
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ApiToken"
  schemas:
    UserNameMismatchError:
      type: object
      properties:
        _type:
          type: string
          enum:
            - UserNameMismatchError
        name:
          type: string
      required:
        - name
        - _type
    UserNotLoggedInError:
      type: object
      properties:
        _type:
          type: string
          enum:
            - UserNotLoggedInError
      required:
        - _type
    UserNotFoundError:
      type: object
      properties:
        _type:
          type: string
          enum:
            - UserNotFoundError
        name:
          type: string
      required:
        - name
        - _type
    UserProfileSaveError:
      discriminator:
        propertyName: _type
      oneOf:
        - $ref: "#/components/schemas/UserNameMismatchError"
        - $ref: "#/components/schemas/UserNotFoundError"
        - $ref: "#/components/schemas/UserNotLoggedInError"
      required:
        - _type
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        lastUpdateTimestamp:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        description:
          type: string
        identifier:
          type: string
        starredViews:
          type: array
          items:
            type: integer
            format: int64
        ownedBy:
          type: string
      required:
        - name
    ApiToken:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        lastUpdateTimestamp:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        description:
          type: string
        token:
          type: string
      required:
        - name
        - token
