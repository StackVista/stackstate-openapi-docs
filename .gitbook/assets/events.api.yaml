paths:
  /events:
    post:
      tags:
        - event
      summary: "Get events"
      description: "Gets you a list of events that exist for topology and time selections."
      operationId: getEvents
      requestBody:
        $ref: "#/components/requestBodies/EventListBody"
      responses:
        "200":
          $ref: "#/components/responses/events"
        "422":
          description: Get Events Elastic Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventsError"
        "400":
          description: Get Events Topology Overflow Error Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
        "500":
          $ref: "common.api.yaml#/components/responses/genericServerError"
  /events/{eventId}:
    get:
      tags:
        - event
      summary: "Get single event"
      description: "Retrieves a specific event by its identifier."
      operationId: getEvent
      parameters:
        - $ref: "#/components/parameters/eventId"
        - name: startTimestampMs
          in: query
          required: true
          schema:
            type: integer
            format: instant
        - name: endTimestampMs
          in: query
          required: true
          schema:
            type: integer
            format: instant
        - name: playHeadTimestampMs
          in: query
          schema:
            type: integer
            format: instant
      responses:
        "200":
          $ref: "#/components/responses/event"
        "400":
          description: Get Event Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
        "404":
          $ref: "#/components/responses/eventNotFoundError"
        "422":
          description: "Get Event Elastic Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventsError"
        "500":
          $ref: "common.api.yaml#/components/responses/genericServerError"
  /eventTypes:
    get:
      tags:
        - event
      summary: "Get event types"
      description: "Get a list of event types for a certain STQL query."
      operationId: getEventTypes
      parameters:
        - name: startTimestampMs
          in: query
          required: true
          schema:
            type: integer
            format: instant
        - name: endTimestampMs
          in: query
          required: true
          schema:
            type: integer
            format: instant
        - name: topologyQuery
          in: query
          required: true
          schema:
            type: string
        - name: rootCauseMode
          in: query
          schema:
            $ref: "#/components/schemas/RootCauseMode"
        - name: playHeadTimestampMs
          in: query
          schema:
            type: integer
            format: instant
        - name: eventTypes
          in: query
          required: false
          style: pipeDelimited
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/eventCategories"
        - name: eventSources
          in: query
          required: false
          style: pipeDelimited
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: eventTags
          in: query
          required: false
          style: pipeDelimited
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: match
          in: query
          required: false
          schema:
            type: string
            default: ""
      responses:
        "200":
          $ref: "#/components/responses/eventSuggestions"
        "422":
          description: "Get events error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventsError"
        "400":
          description: "Get events topology overflow error, validation error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
        "500":
          $ref: "common.api.yaml#/components/responses/genericServerError"
  /eventSources:
    get:
      tags:
        - event
      operationId: getEventSources
      summary: "Get event sources"
      description: "Get a list of event sources."
      parameters:
        - name: startTimestampMs
          in: query
          required: true
          schema:
            type: integer
            format: instant
        - name: endTimestampMs
          in: query
          required: true
          schema:
            type: integer
            format: instant
        - name: topologyQuery
          in: query
          required: true
          schema:
            type: string
        - name: rootCauseMode
          in: query
          schema:
            $ref: "#/components/schemas/RootCauseMode"
        - name: playHeadTimestampMs
          in: query
          schema:
            type: integer
            format: instant
        - name: eventTypes
          in: query
          required: false
          style: pipeDelimited
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/eventCategories"
        - name: eventSources
          in: query
          required: false
          style: pipeDelimited
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: eventTags
          in: query
          required: false
          style: pipeDelimited
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: match
          in: query
          schema:
            type: string
            default: ""
      responses:
        "200":
          $ref: "#/components/responses/eventSuggestions"
        "422":
          description: "Get events error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventsError"
        "400":
          description: "Get events topology overflow error, validation error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
        "500":
          $ref: "common.api.yaml#/components/responses/genericServerError"
  /eventTags:
    get:
      tags:
        - event
      summary: "Get event tags"
      description: "Gets a list of tags that exist in a list of events."
      operationId: getEventTags
      parameters:
        - name: startTimestampMs
          in: query
          required: true
          schema:
            type: integer
            format: instant
        - name: endTimestampMs
          in: query
          required: true
          schema:
            type: integer
            format: instant
        - name: topologyQuery
          in: query
          required: true
          schema:
            type: string
        - name: rootCauseMode
          in: query
          schema:
            $ref: "#/components/schemas/RootCauseMode"
        - name: playHeadTimestampMs
          in: query
          schema:
            type: integer
            format: instant
        - name: eventTypes
          in: query
          required: false
          style: pipeDelimited
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          required: true
          schema:
            type: integer
        - $ref: "#/components/parameters/eventCategories"
        - name: eventSources
          in: query
          required: false
          style: pipeDelimited
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: eventTags
          in: query
          required: false
          style: pipeDelimited
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: match
          in: query
          schema:
            type: string
            default: ""
      responses:
        "200":
          $ref: "#/components/responses/eventSuggestions"
        "422":
          description: "Get events error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventsError"
        "400":
          description: "Get events topology overflow error, validation error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
        "500":
          $ref: "common.api.yaml#/components/responses/genericServerError"
components:
  requestBodies:
    EventListBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EventListRequest"
  parameters:
    eventId:
      in: path
      name: eventId
      required: true
      schema:
        $ref: "#/components/schemas/EventId"
      description: The Identifier of an event.
    eventCategories:
      in: query
      name: eventCategories
      required: false
      style: pipeDelimited
      explode: false
      schema:
        type: array
        items:
          $ref: "#/components/schemas/EventCategory"
      description: The category labels of an event.
  responses:
    events:
      description: Event API
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EventItemsWithTotal"
    eventSuggestions:
      description: Event field suggestions
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StringItemsWithTotal"
    event:
      description: Event
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TopologyEvent"
    eventNotFoundError:
      description: "Error when retrieving an event"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EventNotFoundError"
  schemas:
    SourceLink:
      type: object
      properties:
        title:
          type: string
        url:
          type: string
      required:
        - title
        - url
    EventTag:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      required:
        - key
        - value
    EventCategory:
      type: string
      enum:
        - Changes
        - Alerts
        - Anomalies
        - Activities
        - Others
    EventElement:
      discriminator:
        propertyName: _type
      oneOf:
        - $ref: "#/components/schemas/EventComponent"
        - $ref: "#/components/schemas/EventRelation"
    EventComponent:
      type: object
      properties:
        _type:
          type: string
          enum:
            - EventComponent
        id:
          type: integer
          format: int64
        type:
          type: integer
          format: int64
        name:
          type: string
      required:
        - _type
        - id
        - name
        - type
    EventRelation:
      type: object
      properties:
        _type:
          type: string
          enum:
            - EventRelation
        id:
          type: integer
          format: int64
        type:
          type: integer
          format: int64
        name:
          type: string
        source:
          $ref: "#/components/schemas/EventComponent"
        target:
          $ref: "#/components/schemas/EventComponent"
        dependencyDirection:
          $ref: "#/components/schemas/DependencyDirection"
      required:
        - _type
        - id
        - type
        - source
        - target
        - dependencyDirection
    EventRef:
      type: object
      properties:
        title:
          type: string
        eventId:
          type: string
        eventTimestamp:
          type: integer
          format: int64
        eventType:
          type: string
      required:
        - _type
        - title
        - eventId
        - eventTimestamp
        - eventType
    TopologyEvent:
      type: object
      properties:
        identifier:
          type: string
        sourceIdentifier:
          type: string
        elementIdentifiers:
          type: array
          items:
            type: string
        elements:
          type: array
          items:
            $ref: "#/components/schemas/EventElement"
        causingEvents:
          type: array
          items:
            $ref: "#/components/schemas/EventRef"
        source:
          type: string
        category:
          $ref: "#/components/schemas/EventCategory"
        description:
          type: string
        name:
          type: string
        sourceLinks:
          type: array
          items:
            $ref: "#/components/schemas/SourceLink"
        data:
          type: object
        eventType:
          type: string
        eventTime:
          type: integer
          format: int64
        processedTime:
          type: integer
          format: int64
        tags:
          type: array
          items:
            $ref: "#/components/schemas/EventTag"
      required:
        - name
        - identifier
        - elements
        - causingEvents
        - source
        - category
        - eventType
        - eventTime
        - processedTime
        - sourceLinks
        - tags
        - elementIdentifiers
        - data
    StqlParsingError:
      type: object
      properties:
        _type:
          type: string
          enum:
            - StqlParsingError
        message:
          type: string
      required:
        - _type
        - message
    RootCauseParsingError:
      type: object
      properties:
        _type:
          type: string
          enum:
            - RootCauseParsingError
        message:
          type: string
      required:
        - _type
        - message
    ElasticSearchError:
      type: object
      properties:
        _type:
          type: string
          enum:
            - ElasticSearchError
        message:
          type: string
      required:
        - _type
        - message
    EventNotFoundError:
      type: object
      properties:
        _type:
          type: string
          enum:
            - EventNotFoundError
        eventId:
          $ref: "#/components/schemas/EventId"
      required:
        - _type
        - eventId
    EventsError:
      discriminator:
        propertyName: _type
      oneOf:
        - $ref: "#/components/schemas/ElasticSearchError"
        - $ref: "#/components/schemas/RootCauseParsingError"
        - $ref: "#/components/schemas/StqlParsingError"
        - $ref: "#/components/schemas/EventNotFoundError"
      required:
        - _type
    TopologyOverflowError:
      type: object
      properties:
        _type:
          type: string
          enum:
            - TopologyOverflowError
        maxSize:
          type: integer
      required:
        - _type
        - maxSize
    RequestValidationError:
      type: object
      properties:
        _type:
          type: string
          enum:
            - RequestValidationError
        message:
          type: string
      required:
        - _type
        - message
    RequestError:
      discriminator:
        propertyName: _type
      oneOf:
        - $ref: "#/components/schemas/TopologyOverflowError"
        - $ref: "#/components/schemas/RequestValidationError"
      required:
        - _type
    StringItemsWithTotal:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
        total:
          type: integer
          format: int64
      required:
        - items
        - total
    EventItemsWithTotal:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/TopologyEvent"
        total:
          type: integer
          format: int64
      required:
        - items
        - total
    EventCursor:
      type: object
      properties:
        lastEventTimestampMs:
          type: integer
          format: int64
        lastEventId:
          type: string
      required:
        - lastEventTimestampMs
        - lastEventId
    DependencyDirection:
      type: string
      enum:
        - one-way
        - none
        - both
    RootCauseMode:
      type: string
      enum:
        - no-cause
        - cause-only
        - full-cause-tree
    EventId:
      type: string
    EventListRequest:
      type: object
      properties:
        startTimestampMs:
          type: integer
          format: instant
        endTimestampMs:
          type: integer
          format: instant
        topologyQuery:
          type: string
        limit:
          type: integer
        playHeadTimestampMs:
          type: integer
          format: instant
        rootCauseMode:
          $ref: "#/components/schemas/RootCauseMode"
        eventTypes:
          type: array
          items:
            type: string
        eventTags:
          type: array
          items:
            type: string
        eventCategories:
          type: array
          items:
            $ref: "#/components/schemas/EventCategory"
        eventSources:
          type: array
          items:
            type: string
        cursor:
          $ref: "#/components/schemas/EventCursor"
      required:
        - startTimestampMs
        - endTimestampMs
        - topologyQuery
        - limit
