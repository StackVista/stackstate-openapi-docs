paths:
  /synchronization/health/streams:
    get:
      tags:
        - healthSynchronization
      summary: "List health sync streams"
      description: "Status overview of the health synchronization streams."
      operationId: getHealthSynchronizationStreamsOverview
      responses:
        "200":
          description: List of existing health streams
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreamList"
  /synchronization/health/stream/{healthStreamUrn}/status:
    parameters:
      - $ref: "#/components/parameters/healthStreamUrn"
    get:
      tags:
        - healthSynchronization
      summary: "Get health sync stream status"
      description: "Status overview of a single health synchronization stream"
      operationId: getHealthSynchronizationStreamStatus
      responses:
        "200":
          description: Status data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthStreamStatus"
        "400":
          $ref: "#/components/responses/urnBadRequest"
        "404":
          $ref: "#/components/responses/healthStreamError"
  /synchronization/health/stream/{healthStreamUrn}/clearErrors:
    parameters:
      - $ref: "#/components/parameters/healthStreamUrn"
    post:
      tags:
        - healthSynchronization
      summary: "Clear health sync stream errors"
      description: "Clear all errors for a stream and its sub-streams."
      operationId: postHealthSynchronizationStreamClearErrors
      responses:
        "204":
          description: Return ok (but no content)
        "400":
          $ref: "#/components/responses/urnBadRequest"
        "404":
          $ref: "#/components/responses/healthStreamError"
  /synchronization/health/stream/{healthStreamUrn}:
    parameters:
      - $ref: "#/components/parameters/healthStreamUrn"
    delete:
      tags:
        - healthSynchronization
      summary: "Delete health sync stream"
      description: "Delete a health synchronization stream. Deletion will not be immediate."
      operationId: deleteHealthSynchronizationStream
      responses:
        "204":
          description: "Return ok (but no content)"
        "400":
          $ref: "#/components/responses/urnBadRequest"
        "404":
          $ref: "#/components/responses/healthStreamError"
  /synchronization/health/stream/{healthStreamUrn}/substreams:
    parameters:
      - $ref: "#/components/parameters/healthStreamUrn"
    get:
      tags:
        - healthSynchronization
      summary: "List health sync sub-streams"
      description: "Overview of all sub-streams in a certain health stream."
      operationId: getHealthSynchronizationSubStreamOverview
      responses:
        "200":
          description: List of substreams
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubStreamList"
        "400":
          $ref: "#/components/responses/urnBadRequest"
        "404":
          $ref: "#/components/responses/healthStreamError"
  /synchronization/health/stream/{healthStreamUrn}/topologyMatches:
    parameters:
      - $ref: "#/components/parameters/healthStreamUrn"
    get:
      tags:
        - healthSynchronization
      summary: "List health sync stream check-states"
      description: "Overview of check-states matched to topology on the main stream."
      operationId: getHealthSynchronizationStreamTopologyMatches
      responses:
        "200":
          description: Topology matches
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopologyMatchResult"
        "400":
          $ref: "#/components/responses/urnBadRequest"
        "404":
          $ref: "#/components/responses/healthSubStreamError"
  /synchronization/health/stream/{healthStreamUrn}/substream/{healthSyncSubStreamId}/status:
    parameters:
      - $ref: "#/components/parameters/healthStreamUrn"
      - $ref: "#/components/parameters/healthSyncSubStreamId"
    get:
      tags:
        - healthSynchronization
      summary: "Get health sync sub-stream status"
      description: "Status overview of a single health synchronization sub stream"
      operationId: getHealthSynchronizationSubStreamStatus
      responses:
        "200":
          description: Sub stream status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthSubStreamStatus"
        "400":
          $ref: "#/components/responses/urnBadRequest"
        "404":
          $ref: "#/components/responses/healthSubStreamError"
  /synchronization/health/stream/{healthStreamUrn}/substream/{healthSyncSubStreamId}/topologyMatches:
    parameters:
      - $ref: "#/components/parameters/healthStreamUrn"
      - $ref: "#/components/parameters/healthSyncSubStreamId"
    get:
      tags:
        - healthSynchronization
      summary: "List health sync sub-stream check-states"
      description: "Overview of check-states matched to topology on the main stream."
      operationId: getHealthSynchronizationSubStreamTopologyMatches
      responses:
        "200":
          description: Topology matches for a specified sub stream
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopologyMatchResult"
        "400":
          $ref: "#/components/responses/urnBadRequest"
        "404":
          $ref: "#/components/responses/healthSubStreamError"
components:
  responses:
    urnBadRequest:
      description: "Bad request when specifying an invalid identifier"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidUrn"
    healthStreamError:
      description: "Error when retrieving health stream"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HealthStreamNotFound"
    healthSubStreamError:
      description: "Error when retrieving health sub stream"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/HealthSubStreamError"
  parameters:
    healthStreamUrn:
      in: path
      name: healthStreamUrn
      schema:
        type: string
      required: true
      description: Urn of the health stream.
    healthSyncSubStreamId:
      in: path
      name: healthSyncSubStreamId
      required: true
      schema:
        type: string
      description: Health synchronization sub stream id.
  schemas:
    StreamListItem:
      type: object
      properties:
        urn:
          type: string
        consistencyModel:
          type: string
        subStreams:
          type: integer
      required:
        - urn
        - consistencyModel
        - subStreams
    StreamList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/StreamListItem"
      required:
        - items
    SubStreamListItem:
      type: object
      properties:
        subStreamId:
          type: string
        subStreamState:
          $ref: "#/components/schemas/HealthSubStreamConsistencyState"
        checkStateCount:
          type: integer
      required:
        - subStreamId
        - subStreamState
        - checkStateCount
    SubStreamList:
      type: object
      properties:
        subStreams:
          type: array
          items:
            $ref: "#/components/schemas/SubStreamListItem"
      required:
        - subStreams
    MetricBucketValue:
      type: object
      properties:
        value:
          type: number
          format: double
    MetricBucketValues:
      type: array
      items:
        $ref: "#/components/schemas/MetricBucketValue"
    HealthStreamMetrics:
      type: object
      properties:
        bucketSizeSeconds:
          type: integer
        latencySeconds:
          $ref: "#/components/schemas/MetricBucketValues"
        messagePerSecond:
          $ref: "#/components/schemas/MetricBucketValues"
        createsPerSecond:
          $ref: "#/components/schemas/MetricBucketValues"
        updatesPerSecond:
          $ref: "#/components/schemas/MetricBucketValues"
        deletesPerSecond:
          $ref: "#/components/schemas/MetricBucketValues"
      required:
        - bucketSizeSeconds
    UnmatchedCheckState:
      type: object
      properties:
        checkStateId:
          type: string
        topologyElementIdentifier:
          type: string
      required:
        - checkStateId
        - topologyElementIdentifier
    MultipleMatchesCheckState:
      type: object
      properties:
        checkStateId:
          type: string
        topologyElementIdentifier:
          type: string
        matchCount:
          type: integer
      required:
        - checkStateId
        - topologyElementIdentifier
        - matchCount
    TopologyMatchResult:
      type: object
      properties:
        matchedCheckStates:
          type: integer
        unmatchedCheckStates:
          type: array
          items:
            $ref: "#/components/schemas/UnmatchedCheckState"
        multipleMatchesCheckStates:
          type: array
          items:
            $ref: "#/components/schemas/MultipleMatchesCheckState"
      required:
        - matchedCheckStates
        - unmatchedCheckStates
        - multipleMatchesCheckStates
    HealthStreamError:
      type: object
      properties:
        errorCode:
          type: string
        level:
          type: string
        error:
          type: string
        count:
          type: integer
      required:
        - errorCode
        - level
        - error
        - count
    HealthStreamErrors:
      type: array
      items:
        $ref: "#/components/schemas/HealthStreamError"
    HealthSubStreamSnapshot:
      type: object
      properties:
        _type:
          type: string
          enum:
            - HealthSubStreamSnapshot
        expiryIntervalMs:
          type: integer
        repeatIntervalMs:
          type: integer
      required:
        - _type
        - repeatIntervalMs
    HealthSubStreamExpiry:
      type: object
      properties:
        _type:
          type: string
          enum:
            - HealthSubStreamExpiry
        expiryIntervalMs:
          type: integer
        repeatIntervalMs:
          type: integer
      required:
        - _type
        - repeatIntervalMs
        - expiryIntervalMs
    HealthSubStreamTransactionalIncrements:
      type: object
      properties:
        _type:
          type: string
          enum:
            - HealthSubStreamTransactionalIncrements
        offset:
          type: integer
          format: int64
        batchIndex:
          type: integer
          format: int64
      required:
        - _type
        - offset
    HealthSubStreamConsistencyState:
      discriminator:
        propertyName: _type
      oneOf:
        - $ref: "#/components/schemas/HealthSubStreamSnapshot"
        - $ref: "#/components/schemas/HealthSubStreamExpiry"
        - $ref: "#/components/schemas/HealthSubStreamTransactionalIncrements"
      required:
        - _type
    HealthSubStreamStatus:
      type: object
      properties:
        errors:
          $ref: "#/components/schemas/HealthStreamErrors"
        metrics:
          $ref: "#/components/schemas/HealthStreamMetrics"
        subStreamState:
          $ref: "#/components/schemas/HealthSubStreamConsistencyState"
        checkStateCount:
          type: integer
      required:
        - metrics
        - subStreamState
        - checkStateCount
    HealthStreamStatus:
      type: object
      properties:
        partition:
          type: integer
        consistencyModel:
          type: string
        recoverMessage:
          type: string
        globalErrors:
          $ref: "#/components/schemas/HealthStreamErrors"
        aggregateMetrics:
          $ref: "#/components/schemas/HealthStreamMetrics"
        mainStreamStatus:
          $ref: "#/components/schemas/HealthSubStreamStatus"
      required:
        - partition
        - consistencyModel
        - aggregateMetrics
    InvalidUrn:
      type: object
      properties:
        urn:
          type: string
        message:
          type: string
      required:
        - urn
        - message
    HealthStreamNotFound:
      type: object
      properties:
        _type:
          type: string
          enum:
            - HealthStreamNotFound
        urn:
          type: string
      required:
        - urn
        - _type
    HealthSubStreamNotFound:
      type: object
      properties:
        _type:
          type: string
          enum:
            - HealthSubStreamNotFound
        urn:
          type: string
        subStreamId:
          type: string
      required:
        - urn
        - _type
    HealthSubStreamError:
      discriminator:
        propertyName: _type
      oneOf:
        - $ref: "#/components/schemas/HealthStreamNotFound"
        - $ref: "#/components/schemas/HealthSubStreamNotFound"
      required:
        - _type
